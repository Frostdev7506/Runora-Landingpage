---
export interface Props {
  title: string;
  description: string;
  date: string;
  slug: string;
  readingTime?: string;
}

const { title, description, date, slug, readingTime = '5 min read' } = Astro.props;

// Format the date nicely
const formattedDate = new Date(date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<article class="blog-preview">
    <a href={slug} class="blog-link">
        <div class="content">
            <div class="meta">
                <time datetime={date}>{formattedDate}</time>
                <span class="reading-time">{readingTime}</span>
            </div>
            
            <h3>{title}</h3>
            <p class="description">{description}</p>
            
            <div class="read-more">
                Read More
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M5 12h14"></path>
                    <path d="m12 5 7 7-7 7"></path>
                </svg>
            </div>
        </div>
    </a>
</article>

<style>
.blog-preview {
    position: relative;
    border-radius: 16px;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    background: white;
    border: 1px solid rgba(0, 0, 0, 0.08);
}

.blog-preview:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 24px -10px rgba(0, 0, 0, 0.1);
    border-color: rgba(0, 0, 0, 0.15);
}

.blog-link {
    display: block;
    padding: 2rem;
    text-decoration: none;
    color: inherit;
    height: 100%;
}

.content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    height: 100%;
}

.meta {
    display: flex;
    align-items: center;
    gap: 1rem;
    font-size: 0.875rem;
    color: #666;
}

.meta time {
    position: relative;
    padding-right: 1rem;
}

.meta time::after {
    content: "â€¢";
    position: absolute;
    right: 0;
    color: #ccc;
}

.reading-time {
    color: #666;
    font-weight: 500;
}

h3 {
    font-size: 1.5rem;
    font-weight: 700;
    line-height: 1.3;
    color: #000;
    margin: 0;
    transition: color 0.2s ease;
}

.blog-preview:hover h3 {
    color: rgb(var(--color-primary));
}

.description {
    font-size: 1.1rem;
    line-height: 1.6;
    color: #444;
    margin: 0;
    opacity: 0.9;
    flex-grow: 1;
}

.read-more {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
    color: rgb(var(--color-primary));
    margin-top: 0.5rem;
    transition: gap 0.3s ease;
}

.read-more svg {
    transition: transform 0.3s ease;
}

.blog-preview:hover .read-more {
    gap: 0.75rem;
}

.blog-preview:hover .read-more svg {
    transform: translateX(4px);
}

/* Optional: Add a subtle gradient overlay on hover */
.blog-preview::after {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(
        45deg,
        rgba(var(--color-primary), 0.03),
        rgba(var(--color-primary), 0)
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
}

.blog-preview:hover::after {
    opacity: 1;
}

@media (max-width: 768px) {
    .blog-link {
        padding: 1.5rem;
    }

    h3 {
        font-size: 1.25rem;
    }

    .description {
        font-size: 1rem;
    }
}
</style>